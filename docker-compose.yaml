version: '2'
services:
  reverse_proxy:
    build:
      context: ./reverse_proxy
      dockerfile: ./Dockerfile
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
  backend:
    stdin_open: true
    command: python manage.py runserver 0.0.0.0:8000
    build:
      context: ./tank_backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./tank_backend:/app"
    env_file:
      - ./tank_backend/conf.env
      - ./db_conf.env
  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data/
    env_file:
      - ./db_conf.env
  frontend:
    stdin_open: true
    command: yarn run start
    build:
      context: ./tank_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "/app/node_modules"
      - "./tank_frontend:/app"
    env_file:
      - ./tank_frontend/conf.env

  broker:
    image: rabbitmq:latest
    hostname: broker
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"

  worker:
    build: ./tank_backend
    restart: "no"
    command: celery -A tank_backend worker
    volumes:
      - .:/code
    depends_on:
      - broker
      - backend
      - db
    env_file:
      - ./tank_backend/conf.env
      - ./db_conf.env

  worker_orchestrator_db:
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=worker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
    - "5433:5432"
  worker_orchestrator:
    image: tanksoar/worker_orchestrator:latest
    environment:
      - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0
        -Dquarkus.http.port=8080
        -Djava.util.logging.manager=org.jboss.logmanager.LogManager
        -Xmx128m
        -Ddocker.daemon.tcp.host=localhost
        -Ddocker.daemon.tcp.port=2375
        -Dquarkus.datasource.workers.jdbc.url=jdbc:postgresql://localhost:5433/worker
        -Dquarkus.datasource.workers.username=postgres
        -Dquarkus.datasource.workers.password=postgres
    ports:
      - "127.0.0.1:8080:8080"
    network_mode: "host"
    depends_on:
      - "worker_orchestrator_db"

volumes:
  db:
